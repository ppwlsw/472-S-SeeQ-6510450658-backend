name: SeeQ CD
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Generate WWWGROUP
        id: generate-wwwgroup
        run: |
          WWWGROUP=$(id -g)
          echo "WWWGROUP=${WWWGROUP}" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          build-args: |
            WWWGROUP=${{ env.WWWGROUP }}
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/472-s-seeq-6510450976-backend:latest
            ${{ secrets.DOCKER_USERNAME }}/472-s-seeq-6510450976-backend:${{ github.sha }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/472-s-seeq-6510450976-backend:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/472-s-seeq-6510450976-backend:buildcache,mode=max

  tag:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' 

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Generate tag
        id: generate_tag
        run: |
          NEW_TAG=$(date +'%Y.%m.%d-%H%M%S')
          echo "TAG=$NEW_TAG" >> $GITHUB_ENV

      - name: Create and push tag
        run: |
          git tag $TAG
          git push origin $TAG

  release:
    runs-on: ubuntu-latest
    needs: tag
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false